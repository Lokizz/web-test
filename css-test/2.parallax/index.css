/* 实现要点 
? 1. 通过 mousemove 事件获取 event.clientX/Y
? 2. clientX/Y 与图片素材之间的宽高相关关系决定素材位移的大小与方向
? 3. 利用 transform 的 translate 实现位移效果
*/

:root {
  font-family: 'Orbitron', sans-serif;
  font-size: 18px;
}

body {
  margin: 0;
  padding: 0;
}

.parallax-wrapper {
  position: relative;
}

.parallax-text {
  position: absolute;
  top: 1rem;
  left: 50%;
  transform: translateX(-50%);

  z-index: 99;
  color: white;
  font-size: 4rem;
  text-transform: uppercase;
  font-weight: bold;
  user-select: none;
}

.parallax-top-layer,
.parallax-planet, 
.parallax-floating-rock,
.parallax-glimmer {
  position: absolute;
}

.parallax-background {
  width: 100%;
  height: auto;
  /* 置于底部 */
  position: relative;
  z-index: -999;
  display: block;
}

.layer-1 {
  z-index: 999;
  bottom: 0;
  left: 0;
  width: 30%;
  outline: 2px solid yellow;
}

.layer-2 {
  z-index: 899;
  width: 100%;
  bottom: 0;
  outline: 2px solid red;
  display: none;
}

.layer-3 {
  z-index: 799;
  right: 0;
  width: 50%;
  height: auto;
  top: 0;
}

.large-planet {
  width: 12rem;
  height: auto;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

.parallax-glimmer {

}

@media screen and (min-width: 1800px) {
  body {
    max-width: 1800px;
    min-width: 1200px;
  }

  .container {
    width: 80%;
    margin: auto;
  }
}
